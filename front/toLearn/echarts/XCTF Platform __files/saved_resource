

(function(globals) {

  var django = globals.django || (globals.django = {});

  
  django.pluralidx = function(count) { return (count == 1) ? 0 : 1; };
  

  /* gettext library */

  django.catalog = django.catalog || {};
  
  var newcatalog = {
    "CTF\u653b\u9632": "CTF Attack&Defense", 
    "CTF\u89e3\u9898": "CTF Jeopardy", 
    "WriteUp\u6587\u4ef6\u683c\u5f0f\u4e0d\u5bf9": "The format of Writeup is not correct", 
    "\u4e13\u4e1a/\u90e8\u95e8": "major/department", 
    "\u4e2a\u4eba\u89e3\u9898\u8d5b": "Personal solve events", 
    "\u4e2a\u961f\u4f0d\u89e3\u51fa": "teams have solved", 
    "\u4e3b\u529e\u65b9\u5173\u95ed\u6392\u884c\u699c": "the contest do not show rank", 
    "\u4fdd\u5b58writeup\u6210\u529f": "Successfully save the writeup", 
    "\u4fdd\u5bc6": "secret", 
    "\u516c\u544a\u4e0d\u5b58\u5728": "the notice does not exist", 
    "\u5171\u6709": "there are", 
    "\u521b\u5efa": "create", 
    "\u52a0\u5165": "join", 
    "\u53d1\u9001\u5931\u8d25": "send failed", 
    "\u53d1\u9001\u5931\u8d25\uff01": "send failed", 
    "\u53d1\u9001\u6210\u529f": "send successfully", 
    "\u53d1\u9001\u6ce8\u518c\u90ae\u4ef6\u5931\u8d25": "send e-mail failed", 
    "\u53ea\u6709\u961f\u957f\u624d\u80fd\u62a5\u540d": "only teamleader can enrol", 
    "\u5510\u6d77\u5747": "tanghaijun", 
    "\u586b\u5199\u6709\u8bef": "you filled in is wrong", 
    "\u5973": "female", 
    "\u5b66\u6821/\u4f01\u4e1a": "school/company", 
    "\u5bf9\u65b9\u672a\u516c\u5f00\u4e2a\u4eba\u4fe1\u606f": "The user does not make personal information public", 
    "\u5df2\u53d1\u51fa\u9080\u8bf7": "have invited", 
    "\u5df2\u53d1\u51fa\u9080\u8bf7...": "Invitation has been sent", 
    "\u5df2\u53d1\u9001\uff01": "have send", 
    "\u5df2\u62d2\u7edd": "has rejected", 
    "\u5df2\u63a5\u53d7": "has accepted", 
    "\u5df2\u9080\u8bf7": "has invited", 
    "\u5df2\u9a8c\u8bc1": "Verified", 
    "\u5f53\u524d\u6218\u961f\u6ca1\u6709\u961f\u5458": "There are no members in this team", 
    "\u5f97\u5206": "score", 
    "\u6027\u522b": "sex", 
    "\u60a8\u5df2\u52a0\u5165\u5176\u5b83\u961f\u4f0d": "you have joined a team", 
    "\u60a8\u8fd8\u6ca1\u6709\u52a0\u5165\u8be5\u961f\u4f0d": "you do not join this team", 
    "\u6210\u957f\u66f2\u7ebf": "growing curve", 
    "\u6218\u961f": "team", 
    "\u6218\u961f\u9080\u8bf7\u60a8\u52a0\u5165\uff01": "invite you to join the team", 
    "\u624b\u673a\u53f7\u7801": "Phone number", 
    "\u62a5\u540d\u65f6\u95f4\u5c1a\u672a\u5f00\u59cb": "the enrol time not begin", 
    "\u62a5\u540d\u65f6\u95f4\u5df2\u7ecf\u7ed3\u675f": "the enrol time is past", 
    "\u6587\u4ef6\u4f53\u79ef\u8fc7\u5927!": "File size is too large!", 
    "\u65e7\u5bc6\u7801\u4e0d\u6b63\u786e": "the old password is wrong", 
    "\u65f6\u95f4": "time", 
    "\u6709": "there are", 
    "\u672a\u52a0\u5165\u6218\u961f": "not join any team", 
    "\u67e5\u65e0\u6b64\u961f": "the team does not exist", 
    "\u6b64\u9009\u62e9\u9898\u4e0d\u5b58\u5728": "the choice question does not exist", 
    "\u6b64\u9898\u4e0d\u5b58\u5728": "the task does not exist", 
    "\u6bd4\u8d5b": "events", 
    "\u6bd4\u8d5b\u6682\u505c": "the task is pause", 
    "\u6bd4\u8d5b\u7c7b\u578b": "Format", 
    "\u6bd4\u8d5b\u7ed3\u675f": "the task is past", 
    "\u6ca1\u6709\u8be5\u9898\u76ee": "task does not exist", 
    "\u70b9\u51fb\u9a8c\u8bc1": "to verify", 
    "\u7406\u8bba\u57fa\u7840": "Theoretical Basis", 
    "\u7528\u6237\u4e0d\u5b58\u5728\u6216\u8005\u5bc6\u7801\u4e0d\u6b63\u786e": "the user does not exist, or the password is wrong", 
    "\u7528\u6237\u540d\u5df2\u7ecf\u5b58\u5728": "the user name already exists", 
    "\u7528\u6237\u672a\u6fc0\u6d3b": "the user has not been actived", 
    "\u7533\u8bf7\u52a0\u5165\u60a8\u7684\u6218\u961f\uff01": "apply to join your team", 
    "\u7533\u8bf7\u5df2\u53d1\u51fa": "have applied", 
    "\u7533\u8bf7\u5df2\u53d1\u51fa...": "Application has been sent", 
    "\u7537": "male", 
    "\u771f\u5b9e\u6f0f\u6d1e": "Vulnerability", 
    "\u79fb\u9664": "delete", 
    "\u7b54\u6848\u6b64\u524d\u5df2\u7ecf\u63d0\u4ea4\u8fc7": "answer is already submitted", 
    "\u7ec3\u4e60": "Practice", 
    "\u7ec4\u961f\u5206\u4eab\u8d5b": "Team share events", 
    "\u7ec4\u961f\u89e3\u9898\u8d5b": "Team solve events", 
    "\u7ec4\u961f\u95ef\u5173\u8d5b": "Team pass through", 
    "\u7f6e\u9876": "Top", 
    "\u89e3\u51fa\u4e86": "has solved", 
    "\u89e3\u6563": "break", 
    "\u89e3\u9898\u60c5\u51b5": "solved information", 
    "\u8be5\u6210\u5458\u5df2\u52a0\u5165\u5176\u5b83\u961f\u4f0d": "the user has join a team", 
    "\u8be5\u961f\u4f0d\u4e0d\u5b58\u5728": "the team do not exist", 
    "\u8be5\u961f\u4f0d\u5df2\u7ecf\u62a5\u540d": "the team has enrolled this contest", 
    "\u8be5\u961f\u4f0d\u5df2\u7ecf\u63d0\u4ea4\u7b54\u6848": "the team has submitted this task", 
    "\u8be5\u961f\u4f0d\u6ca1\u6709\u62a5\u540d\u53c2\u8d5b": "the team does not enrol contest", 
    "\u8be5\u961f\u4f0d\u6ca1\u6709\u6743\u9650\u7b54\u6b64\u9898": "team has no permission for this task", 
    "\u8be5\u961f\u4f0d\u6ca1\u6709\u67e5\u770b\u6743\u9650": "the team has no permission for this task", 
    "\u8be5\u961f\u540d\u5df2\u7ecf\u5b58\u5728": "the team name already exist", 
    "\u8bf7\u6c42\u592a\u9891\u7e41\u4e86": "request too often", 
    "\u8d5b\u9898\u4fe1\u606f": "challenge information", 
    "\u8d5b\u9898\u7c7b\u578b": "challenge type", 
    "\u9000\u51fa": "Quit", 
    "\u9000\u51fa\u5931\u8d25": "Logout failed", 
    "\u9053\u9898": "challenges", 
    "\u9080\u8bf7\u4e2d...": "inviting", 
    "\u90ae\u7bb1\u5df2\u7ecf\u5b58\u5728": "the e-mail already exists", 
    "\u961f\u5458": "Members", 
    "\u961f\u957f": "Captain", 
    "\u9700\u8981\u7ec4\u961f\u624d\u80fd\u53c2\u8d5b": "if you want to enroll this task, you need to create a team", 
    "\u975e\u6cd5\u8bf7\u6c42": "illegal request", 
    "\u9a8c\u8bc1\u7801\u5931\u6548": "the authentication code is expired"
  };
  for (var key in newcatalog) {
    django.catalog[key] = newcatalog[key];
  }
  

  if (!django.jsi18n_initialized) {
    django.gettext = function(msgid) {
      var value = django.catalog[msgid];
      if (typeof(value) == 'undefined') {
        return msgid;
      } else {
        return (typeof(value) == 'string') ? value : value[0];
      }
    };

    django.ngettext = function(singular, plural, count) {
      var value = django.catalog[singular];
      if (typeof(value) == 'undefined') {
        return (count == 1) ? singular : plural;
      } else {
        return value[django.pluralidx(count)];
      }
    };

    django.gettext_noop = function(msgid) { return msgid; };

    django.pgettext = function(context, msgid) {
      var value = django.gettext(context + '\x04' + msgid);
      if (value.indexOf('\x04') != -1) {
        value = msgid;
      }
      return value;
    };

    django.npgettext = function(context, singular, plural, count) {
      var value = django.ngettext(context + '\x04' + singular, context + '\x04' + plural, count);
      if (value.indexOf('\x04') != -1) {
        value = django.ngettext(singular, plural, count);
      }
      return value;
    };

    django.interpolate = function(fmt, obj, named) {
      if (named) {
        return fmt.replace(/%\(\w+\)s/g, function(match){return String(obj[match.slice(2,-2)])});
      } else {
        return fmt.replace(/%s/g, function(match){return String(obj.shift())});
      }
    };


    /* formatting library */

    django.formats = {
    "DATETIME_FORMAT": "N j, Y, P", 
    "DATETIME_INPUT_FORMATS": [
      "%Y-%m-%d %H:%M:%S", 
      "%Y-%m-%d %H:%M:%S.%f", 
      "%Y-%m-%d %H:%M", 
      "%Y-%m-%d", 
      "%m/%d/%Y %H:%M:%S", 
      "%m/%d/%Y %H:%M:%S.%f", 
      "%m/%d/%Y %H:%M", 
      "%m/%d/%Y", 
      "%m/%d/%y %H:%M:%S", 
      "%m/%d/%y %H:%M:%S.%f", 
      "%m/%d/%y %H:%M", 
      "%m/%d/%y"
    ], 
    "DATE_FORMAT": "N j, Y", 
    "DATE_INPUT_FORMATS": [
      "%Y-%m-%d", 
      "%m/%d/%Y", 
      "%m/%d/%y"
    ], 
    "DECIMAL_SEPARATOR": ".", 
    "FIRST_DAY_OF_WEEK": "0", 
    "MONTH_DAY_FORMAT": "F j", 
    "NUMBER_GROUPING": "3", 
    "SHORT_DATETIME_FORMAT": "m/d/Y P", 
    "SHORT_DATE_FORMAT": "m/d/Y", 
    "THOUSAND_SEPARATOR": ",", 
    "TIME_FORMAT": "P", 
    "TIME_INPUT_FORMATS": [
      "%H:%M:%S", 
      "%H:%M:%S.%f", 
      "%H:%M"
    ], 
    "YEAR_MONTH_FORMAT": "F Y"
  };

    django.get_format = function(format_type) {
      var value = django.formats[format_type];
      if (typeof(value) == 'undefined') {
        return format_type;
      } else {
        return value;
      }
    };

    /* add to global namespace */
    globals.pluralidx = django.pluralidx;
    globals.gettext = django.gettext;
    globals.ngettext = django.ngettext;
    globals.gettext_noop = django.gettext_noop;
    globals.pgettext = django.pgettext;
    globals.npgettext = django.npgettext;
    globals.interpolate = django.interpolate;
    globals.get_format = django.get_format;

    django.jsi18n_initialized = true;
  }

}(this));

